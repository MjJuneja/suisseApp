{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts","../../src/pages/login/login-api.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEZ;AAcpC;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAZ3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;gBACnC,4EAAe,CAAC,QAAQ,EAAE;aAC3B;YACD,OAAO,EAAE;gBACP,yDAAS;aACV;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;AClBc;AACa;AACQ;AAC1B;AACY;AAEN;AAQ3C;IAYE,mBAAmB,OAAsB,EAChC,IAAU,EACV,SAA0B,EAC1B,gBAAkC,EAClC,GAAY,EACZ,IAAS;QALlB,iBAUC;QAVkB,YAAO,GAAP,OAAO,CAAe;QAChC,SAAI,GAAJ,IAAI,CAAM;QACV,cAAS,GAAT,SAAS,CAAiB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,QAAG,GAAH,GAAG,CAAS;QACZ,SAAI,GAAJ,IAAI,CAAK;QAhBlB,yCAAyC;QACzC,iEAAiE;QACjE,6BAA6B;QAC7B,YAAO,GAAwC;YAC7C,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,SAAI,GAAU,qBAAqB,CAAC;QAWlC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACvD,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IAED,+CAA+C;IAC/C,2BAAO,GAAP;QACE,sDAAsD;QACtD,iCAAiC;QACjC,gBAAgB;QAChB,iCAAiC;QACjC,wBAAwB;QACxB,wCAAwC;QACxC,sCAAsC;QACtC,sBAAsB;QACtB,sBAAsB;QACtB,QAAQ;QACR,qBAAqB;QACrB,MAAM;QACN,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;QACpE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAC,IAAI,CAAC,OAAO,EAAC;YACvD,OAAO,EAAE,OAAO;SACnB,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3B,gDAAgD;YAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IA9CU,SAAS;QALrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,WAAW,6DAAE,CAAY;WACL;SACrB,CAAC;+EAayC;YAC1B,sEAAI;YACC,6EAAe;YACR,6DAAgB;YAC9B,6DAAQ;YACP,IAAI;OAjBP,SAAS,CA+CrB;IAAD,CAAC;AAAA;SA/CY,SAAS,e;;;;;;;;;;;;;;;;;;;;;;ACdmB;AACN;AACE;AAGrC;IACI,kBAAoB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;IAE9B,CAAC;IAEA,iCAAc,GAAd,UAAe,GAA4C;QAC3D,IAAI,GAAG,GAAE,0CAA0C,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;YACrD,0BAA0B;YAC1B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3B,cAAc;QACf,sCAAsC;QACrC,8BAA8B;IAChC,CAAC;IAEO,8BAAW,GAAnB,UAAoB,KAAU;QAC9B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QAC1C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAChD,CAAC;IAnBY,QAAQ;QADpB,yEAAU,EAAE;yCAEgB,2DAAI;OADpB,QAAQ,CAoBpB;IAAD,eAAC;CAAA;AApBoB","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController } from 'ionic-angular';\nimport {LoginApi} from './login-api';\nimport { User } from '../../providers/providers';\nimport { MainPage } from '../pages';\nimport {Http,Headers} from '@angular/http';\nimport { HttpHeaders } from '@angular/common/http';\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  providers:[LoginApi]\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  account: { email: string, password: string } = {\n    email: '',\n    password: ''\n  };\n  logo:String = \"assets/img/icon.png\";\n  // Our translated text strings\n  private loginErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService,\n    public api:LoginApi,\n    public http:Http) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n  }\n\n  // Attempt to login in through our User service\n  doLogin() {\n    // this.user.login(this.account).subscribe((resp) => {\n    //   this.navCtrl.push(MainPage);\n    // }, (err) => {\n    //   this.navCtrl.push(MainPage);\n    //   // Unable to log in\n    //   let toast = this.toastCtrl.create({\n    //     message: this.loginErrorString,\n    //     duration: 3000,\n    //     position: 'top'\n    //   });\n    //   toast.present();\n    // });\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    this.http.post('http://api.suisse-coin.com/authenticate/',this.account,{\n                    headers: headers\n                }).subscribe(data => {\n      // Read the result field from the JSON response.\n      console.log(data);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class LoginApi{\n    constructor(private http:Http){\n\n   }\n    \n    isAuthenticate(obj:{ email: string, loginpassword: string }):Promise<any>{\n    var url =\"http://api.suisse-coin.com/authenticate/\";\n    return this.http.post(url,obj).toPromise().then((response)=>{\n        // return response.json();\n        console.log(response.json());\n    }).catch(this.handleError);\n    //return null;\n   // const object = {name:'Ram',age:21};\n    //this.http.post(url, object);\n  }\n\n  private handleError(error: any): Promise<any> {\n  console.error('An error occurred', error);\n  return Promise.reject(error.message || error);\n}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login-api.ts"],"sourceRoot":""}