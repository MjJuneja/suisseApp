{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts","../../src/pages/login/login-api.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController,AlertController,MenuController } from 'ionic-angular';\nimport {LoginApi} from './login-api';\nimport { User } from '../../providers/providers';\nimport { MainPage } from '../pages';\nimport {RecoverAccountPage} from '../recover-account/recover-account';\n// import {Http,Headers} from '@angular/http';\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  providers:[LoginApi]\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  account: { email: string, loginpassword: string } = {\n    email: '',\n    loginpassword: ''\n  };\n  logo:String = \"assets/img/icon.png\";\n  logo1:String = \"assets/img/logo.png\";\n  Data:any;\n\n  \n  // Our translated text strings\n  private loginErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService,\n    public api:LoginApi,\n    public alertCtrl:AlertController,\n    private menu:MenuController\n  ) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n    this.menu.enable(false, 'myMenu');\n  }\n\n  showAlert(data:any) {\n    let alert = this.alertCtrl.create({\n      title: data,\n      buttons: ['OK']\n    });\n    alert.present();\n  }\n\n  // Attempt to login in through our User service\n  doLogin() {\n//code to navigate when login occurs\n\n    // this.user.login(this.account).subscribe((resp) => {\n    //   this.navCtrl.push(MainPage);\n    // }, (err) => {\n    //   this.navCtrl.push(MainPage);\n    //   // Unable to log in\n    //   let toast = this.toastCtrl.create({\n    //     message: this.loginErrorString,\n    //     duration: 3000,\n    //     position: 'top'\n    //   });\n    //   toast.present();\n    // });\n    \n    if(this.account.email.trim().length>0 && this.account.loginpassword.trim().length>0){\n    this.Data = this.api.isAuthenticate(this.account);\n    this.Data.then((data)=>{\n      //use data.data for data \n      console.log(data);\n      if(data.error_message==\"Invalid Username or Password\"){\n           this.showAlert(\"Invalid Username or Password\");\n      }\n    })\n  }\n  else{\n        this.showAlert('Please enter email & password');\n  }\n}\n\nforget(){\n    this.navCtrl.push(RecoverAccountPage);\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import {Injectable} from '@angular/core';\nimport {Http,Headers} from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class LoginApi{\n    Data:String\n    constructor(private http:Http){\n\n   }\n    \n    isAuthenticate(obj:{email:String,loginpassword:String}):Promise<any>{\n    var url =\"http://api.suisse-coin.com/authenticate/\";\n    let headers = new Headers();\n    this.Data = \"email=\"+obj.email+\"&loginpassword=\"+obj.loginpassword;\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    \n    return this.http.post(url,this.Data,{\n        headers:headers\n    }).toPromise().then((response)=>{\n        return response.json();\n    }).catch(this.handleError);\n   \n  }\n\n  private handleError(error: any): Promise<any> {\n  console.error('An error occurred', error);\n  return Promise.reject(error.message || error);\n}\n    \n  }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login-api.ts"],"sourceRoot":""}